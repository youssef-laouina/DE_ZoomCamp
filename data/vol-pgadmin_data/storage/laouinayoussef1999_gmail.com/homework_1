SELECT
	DISTINCT(trip_type)
FROM green_taxi_trips
LIMIT 10
;

-- Change column type from text into timestamp 
ALTER TABLE green_taxi_trips
ALTER COLUMN lpep_pickup_datetime TYPE timestamp USING lpep_pickup_datetime::timestamp WITHOUT time zone,
ALTER COLUMN lpep_dropoff_datetime TYPE timestamp USING lpep_dropoff_datetime::timestamp WITHOUT time zone 
;

-- Trip Segmentation Count
SELECT
	SUM(CASE
		WHEN gt.trip_distance <= 1
			THEN 1
			ELSE 0
	END) AS trips_up_to_1,
	SUM(CASE
		WHEN gt.trip_distance > 1 AND gt.trip_distance <= 3
			THEN 1
			ELSE 0
	END) AS trips_between_1_3,
	SUM(CASE
		WHEN gt.trip_distance > 3 AND gt.trip_distance <= 7
			THEN 1
			ELSE 0
	END) AS trips_between_3_7,
	SUM(CASE
		WHEN gt.trip_distance > 7 AND gt.trip_distance <= 10
			THEN 1
			ELSE 0
	END) AS trips_between_7_10,
	SUM(CASE
		WHEN gt.trip_distance > 10 
			THEN 1
			ELSE 0
	END) AS trips_greater_10
FROM green_taxi_trips AS gt
WHERE 
	gt.lpep_pickup_datetime >= '2019-10-01'
	AND gt.lpep_dropoff_datetime < '2019-11-01'
;

-- Longest trip for each day
SELECT
	CAST(gt.lpep_pickup_datetime AS DATE) AS DATE,
	trip_distance AS max_trip_distance
FROM green_taxi_trips AS gt
WHERE gt.trip_distance = (
	SELECT
		MAX(trip_distance) 
	FROM green_taxi_trips
	)
;

-- Three biggest pickup zones
SELECT	
	tl.LOCATION_ID,
	z."Zone",
	tl.TOTAL
FROM 
	(SELECT	
		gt."PULocationID" AS LOCATION_ID,
		SUM(gt.total_amount) AS TOTAL
	FROM green_taxi_trips AS gt
	INNER JOIN zones AS z
		ON gt."PULocationID" = z."LocationID"
	WHERE 
		CAST(gt.lpep_pickup_datetime AS DATE) = '2019-10-18'
	GROUP BY gt."PULocationID"
	) AS tl 
INNER JOIN zones AS z
	ON tl.LOCATION_ID = z."LocationID"
WHERE
	tl.TOTAL >= 13000
ORDER BY 3 DESC
LIMIT 3
;

